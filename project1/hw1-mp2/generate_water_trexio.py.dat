
    -----------------------------------------------------------------------
          Psi4: An Open-Source Ab Initio Electronic Structure Package
                               Psi4 1.3.2 release

                         Git: Rev {} zzzzzzz 


    R. M. Parrish, L. A. Burns, D. G. A. Smith, A. C. Simmonett,
    A. E. DePrince III, E. G. Hohenstein, U. Bozkaya, A. Yu. Sokolov,
    R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,
    H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,
    P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,
    F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,
    J. Chem. Theory Comput. 13(7) pp 3185--3197 (2017).
    (doi: 10.1021/acs.jctc.7b00174)


                         Additional Contributions by
    P. Kraus, H. Kruse, M. H. Lechner, M. C. Schieber, R. A. Shaw,
    A. Alenaizan, R. Galvelis, Z. L. Glick, S. Lehtola, and J. P. Misiewicz

    -----------------------------------------------------------------------


    Psi4 started on: Saturday, 04 January 2025 01:50AM

    Process ID: 7848
    Host:       Qadeer
    PSIDATADIR: /usr/share/psi4
    Memory:     500.0 MiB
    Threads:    1
    
  ==> Input File <==

--------------------------------------------------------------------------
import psi4
import trexio

# Set memory and output options
psi4.set_memory('500 MB')
psi4.core.set_output_file('water_output.dat', False)

# Define the water molecule geometry
water = """
O
H 1 0.96
H 1 0.96 2 104.5
"""

# Set Psi4 options
psi4.set_options({
    'basis': 'sto-3g',
    'scf_type': 'pk',
    'reference': 'rhf',
    'e_convergence': 1e-8,
    'd_convergence': 1e-8
})

# Perform Hartree-Fock calculation
energy = psi4.energy('scf', molecule=water)

# Access wavefunction
wfn = psi4.core.Wavefunction.build(psi4.core.get_active_molecule(), psi4.core.get_options())

# Export to TREXIO
trexio_file = trexio.TrexioFile("water.trexio", mode="w")

trexio_file.write_nucleus_repulsion(wfn.nuclear_repulsion_energy())
trexio_file.write_electron_up_num(wfn.nalpha())
trexio_file.write_electron_down_num(wfn.nbeta())
trexio_file.write_mo_num(wfn.nmo())

# Write one-electron integrals
H_core = wfn.H().to_array()
trexio_file.write_mo_1e_int_core_hamiltonian(H_core.flatten())

# Write two-electron integrals (electron repulsion integrals)
eri = wfn.eri().to_array()
# Flatten the 4D ERI tensor into a list of non-zero integrals with their indices
# TREXIO expects integrals in the form <ij|kl>
# For simplicity, we'll write all integrals, but for larger systems, consider using symmetry
indices, values = trexio.convert_eri(eri)
trexio_file.write_mo_2e_int_eri(indices.flatten(), values)

# Write molecular orbital energies
mo_energies = wfn.epsilon_a().to_array()
trexio_file.write_mo_energy(mo_energies)

# Close TREXIO file
trexio_file.close()

--------------------------------------------------------------------------

Traceback (most recent call last):
  File "/usr/bin/psi4", line 287, in <module>
    exec(content)
  File "<string>", line 19, in <module>

ModuleNotFoundError: No module named 'trexio'


Printing out the relevant lines from the Psithon --> Python processed input file:
    0 1
    H 0 0 0
    H 0.74 0 0
    ""","blank_molecule_psi4_yo")
    import psi4
--> import trexio
    psi4.set_memory('500 MB')
    psi4.core.set_output_file('water_output.dat', False)
    water = """
    O
    H 1 0.96

    Psi4 stopped on: Saturday, 04 January 2025 01:50AM
    Psi4 wall time for execution: 0:00:00.00

*** Psi4 encountered an error. Buy a developer more coffee!
*** Resources and help at github.com/psi4/psi4.
